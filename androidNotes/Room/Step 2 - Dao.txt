//Data Access Object :- contains the queries for the insertion or deletion



@Dao
interface ToDoDao {

    @Query("SELECT * FROM todo_table ORDER BY id ASC")
    fun getAllData(): LiveData<List<ToDoData>>

    @Insert(onConflict = OnConflictStrategy.IGNORE)
    suspend fun insertData(toDoData: ToDoData)

    @Update
    suspend fun updateData(toDoData: ToDoData)

    @Delete
    suspend fun deleteItem(toDoData: ToDoData)

    @Query("DELETE FROM todo_table")
    suspend fun deleteAll()

    @Query("SELECT * FROM todo_table WHERE title LIKE :searchQuery")
    fun searchDatabase(searchQuery: String): LiveData<List<ToDoData>>

    @Query("SELECT * FROM todo_table ORDER BY CASE WHEN priority LIKE 'H%' THEN 1 WHEN priority LIKE 'M%' THEN 2 WHEN priority LIKE 'L%' THEN 3 END")
    fun sortByHighPriority(): LiveData<List<ToDoData>>

    @Query("SELECT * FROM todo_table ORDER BY CASE WHEN priority LIKE 'L%' THEN 1 WHEN priority LIKE 'M%' THEN 2 WHEN priority LIKE 'H%' THEN 3 END")
    fun sortByLowPriority(): LiveData<List<ToDoData>>

}




-> @Query is used to write any query for the function
-> @Insert is used to insert the data inside the db
-> @Update is used to modify the already stored data
-> @Delete is used to delete a SINGLE item   ,	for batch deletion we have to write the query
->     OnConflictStrategy.IGNORE  :- to ignore the conflicts b/w old and new data and saves both of them parallely
       OnConflictStrategy.REPLACE :- to replace the data if they both were same 
       OnConflictStrategy.ABORT   :- the transaction will not happen if there will be a conflict

-> in search query we have to enter the name in the main function like :- "%$query%"





