
    <com.google.android.material.textfield.TextInputLayout
        android:id="@+id/dropDownLayout"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginVertical="6dp"
        style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu"
        app:layout_constraintTop_toBottomOf="@id/materialCV"
        app:layout_constraintEnd_toEndOf="@id/materialCV">

        <AutoCompleteTextView
            android:id="@+id/dropdown_menu"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:inputType="none"
            android:text="All"
            />

    </com.google.android.material.textfield.TextInputLayout>




        String[] stringArrayList = new String[]{"All", "Pending", "Approved", "Rejected"};
        ArrayAdapter<String> arrayAdapter = new ArrayAdapter(requireContext(),R.layout.support_simple_spinner_dropdown_item,stringArrayList);
        binding.dropdownMenu.setAdapter(arrayAdapter);


	binding.dropdownMenu.setText(spinnerArray.get(0),false);			//here FALSE is imp.


 holder.dropdownMenu.setOnItemClickListener((adapterView, view, i, l) -> {

                    int adapterPosition = holder.getAbsoluteAdapterPosition();
                    if (position > -1) {
                        Expense e2 = (Expense) expenseInterfaceList.get(adapterPosition);
                        e2.id = UUID.randomUUID().toString();
                        e2.expenseType = typeSpinnerAdapter.getPosition(holder.spinner.getText().toString());
                        e2.ec = holder.spinner.getText().toString();

                        enableUpdateButton(true);
                    }

                    backPressedInterface.showBackPressedDialog();

                });

